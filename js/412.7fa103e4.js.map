{"version":3,"file":"js/412.7fa103e4.js","mappings":"qJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACE,MAAM,CAAC,GAAK,OAAO,OAAS,cAAc,KAAO,QAAQC,GAAG,CAAC,OAASL,EAAIM,iBACnK,EACIC,EAAkB,G,yDCOtB,GACAC,KAAA,QACAC,WAAA,GACAC,IAAAA,GACA,QACA,EACAC,MAAA,GACAC,MAAA,GACAC,SAAA,GACAC,OAAAA,GACA,EACAC,QAAA,CAMAT,YAAAA,CAAAU,GACA,KAAAC,SAAAD,EAAAE,OAAAC,MAAA,GAAAX,KACA,KAAAW,MAAAH,EAAAE,OAAAC,MACAC,QAAAC,IAAA,aAAAF,OACAC,QAAAC,IAAA,gBAAAF,MAAA,IACA,IAAAG,GAAA,EACA,QAAAC,EAAA,EAAAA,EAAA,KAAAJ,MAAAK,OAAAD,IAAA,CACA,MAAAE,EAAA,KAAAN,MAAAI,GAAAf,KAAAkB,MAAA,KACAC,EAAAF,EAAAA,EAAAD,OAAA,GACA,eAAAI,SAAAD,KACAL,GAAA,EAEA,CACAA,IACA,KAAAO,SAAAC,MAAA,4BACA,KAAAC,MAAAC,OACA,KAAAf,SAAA,GACA,KAAAc,MAAAC,KAAAC,MAAA,KAGA,KAAAC,WACA,KAAAC,kBAAA,KAAAhB,MAAA,GAIA,EACAgB,iBAAAA,CAAAH,GACA,WAAAI,SAAA,CAAAC,EAAAC,KACA,MAAAC,EAAA,IAAAC,WACAD,EAAAE,kBAAAT,GACAO,EAAAG,OAAA,KACA,MAAAC,EAAAJ,EAAAK,OACAC,EAAA,IAAAC,IAAAA,UACAD,EAAAE,KACAC,KAAAL,GACAM,MAAA,KACA,MAAAC,EAAAL,EAAAM,aAAA,GACAC,EAAAF,EAAAG,OAAA,GAAAC,OAGAF,EAAAG,QACAnC,QAAAC,IAAA,WAAA+B,GAEA,MAAAI,EAAA,GAEAN,EAAAO,iBAAAC,QAAAC,KAAAA,GAAAnC,SAAAoC,SAAAC,IAEAA,EAAAN,QAEA,MAAAO,EAAA,GACAD,EAAAD,SAAA,CAAAG,EAAAC,KACAF,EAAAV,EAAAY,IAAAD,CAAA,IAEAP,EAAAS,KAAAH,EAAA,IAEAN,EAAAD,QACAnC,QAAAC,IAAA,YAAAmC,GACAnB,EAAA,2BACA6B,OAAAlD,IAEAsB,EAAA,gDACA,CACA,GAEA,EACA,cAAAJ,GACA,MAAAW,EAAA,IAAAC,IAAAA,UACAqB,QAAAtB,EAAAE,KAAAC,KAAA,KAAA7B,MAAA,IACAC,QAAAC,IAAA,MAAA8C,EACA,IC/F6P,I,WCOzPC,GAAY,OACd,EACArE,EACAQ,GACA,EACA,KACA,WACA,MAIF,EAAe6D,EAAiB,O","sources":["webpack://yian/./src/views/excelJs/index.vue","webpack://yian/src/views/excelJs/index.vue","webpack://yian/./src/views/excelJs/index.vue?c567","webpack://yian/./src/views/excelJs/index.vue?695f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('input',{attrs:{\"id\":\"file\",\"accept\":\".xlsx, .xls\",\"type\":\"file\"},on:{\"change\":_vm.handleChange}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <input id=\"file\" accept=\".xlsx, .xls\" type=\"file\" @change=\"handleChange\"/>\n  </div>\n</template>\n\n<script>\nimport Excel from 'exceljs';\n\nexport default {\n  name: 'index',\n  components: {},\n  data () {\n    return {};\n  },\n  props: {},\n  watch: {},\n  computed: {},\n  mounted () {\n  },\n  methods: {\n    /**\n     * @Description 选择文件后触发\n     * @author qianyinggenian\n     * @date 2023/14/10\n     */\n    handleChange (e) {\n      this.filePath = e.target.files[0].name;\n      this.files = e.target.files;\n      console.log('files', this.files);\n      console.log('files[0]', this.files[0]);\n      let flag = true;\n      for (let i = 0; i < this.files.length; i++) {\n        const arr = this.files[i].name.split('.');\n        const fileType = arr[arr.length - 1];\n        if (!['xls', 'xlsx'].includes(fileType)) {\n          flag = false;\n        }\n      }\n      if (!flag) {\n        this.$message.error('请选择正确文件类型(.xls，.xlsx)导入！');\n        if (this.$refs.file) {\n          this.filePath = '';\n          this.$refs.file.value = '';\n        }\n      }\n      this.fileInfo();\n      this.validateExcelFile(this.files[0]);\n      // this.readFile().then(value => {\n      //   console.log('value', value);\n      // });\n    },\n    validateExcelFile (file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = () => {\n          const buffer = reader.result;\n          const workbook = new Excel.Workbook();\n          workbook.xlsx\n            .load(buffer)\n            .then(() => {\n              const worksheet = workbook.getWorksheet(1);\n              const rowCount = worksheet.getRow(1).values; // 获取行\n              // const columnCount = worksheet.getColumn(1).values; // 获取列\n              //  validate table data\n              rowCount.shift();\n              console.log('rowCount', rowCount);\n              // console.log('columnCount', columnCount);\n              const excelList = [];\n\n              worksheet.getSheetValues().filter(temp => !!temp?.length).forEach(item => { // 移除空行\n                // 移除每行首个空元素\n                item.shift();\n                // 定义临时对象存储每一行内容\n                const tempObj = {};\n                item.forEach((item2, index2) => {\n                  tempObj[rowCount[index2]] = item2;\n                });\n                excelList.push(tempObj);\n              });\n              excelList.shift();\n              console.log('excelList', excelList);\n              resolve('Excel file is valid.');\n            }).catch(e => {\n            // eslint-disable-next-line prefer-promise-reject-errors\n              reject('Error occurred while loading the workbook.');\n            });\n        };\n      });\n    },\n    async fileInfo () {\n      const workbook = new Excel.Workbook();\n      const res = await workbook.xlsx.load(this.files[0]);\n      console.log('res', res);\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2ee53f0c&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2ee53f0c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","on","handleChange","staticRenderFns","name","components","data","props","watch","computed","mounted","methods","e","filePath","target","files","console","log","flag","i","length","arr","split","fileType","includes","$message","error","$refs","file","value","fileInfo","validateExcelFile","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","buffer","result","workbook","Excel","xlsx","load","then","worksheet","getWorksheet","rowCount","getRow","values","shift","excelList","getSheetValues","filter","temp","forEach","item","tempObj","item2","index2","push","catch","res","component"],"sourceRoot":""}